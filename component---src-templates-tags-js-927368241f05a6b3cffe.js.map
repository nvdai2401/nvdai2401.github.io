{"version":3,"sources":["webpack:///./src/templates/tags.js"],"names":["styles","tagListDiv","marginLeft","lineHeight","TagsPage","data","group","allMarkdownRemark","title","site","siteMetadata","location","homeLink","useLang","tTags","formatMessage","breadcrumbs","text","style","map","tag","key","fieldValue","count","totalCount","url","kebabCase","pageQuery"],"mappings":"2FAAA,8JAgBMA,EAAS,CACbC,WAAY,CACVC,WAAY,SACZC,WAAY,IA2DDC,UAvDE,SAAC,GAQX,IAAD,IAPJC,KACuBC,EAMnB,EANFC,kBAAqBD,MAEHE,EAIhB,EALFC,KACEC,aAAgBF,MAGpBG,EACI,EADJA,SAEQC,EAAaC,cAAbD,SACFE,EAAQC,YAAc,SAE5B,OACE,kBAAC,IAAD,CAAQJ,SAAUA,EAAUH,MAAOA,EAAOQ,YAAa,CAAC,CAAEC,KAAMH,KAC9D,+BACE,kBAAC,IAAD,OAEF,kBAAC,SAAD,CAAQN,MAAOM,IACf,6BACE,4BAAKA,GACL,yBAAKI,MAAOlB,EAAOC,YAChBK,EAAMa,KAAI,SAAAC,GAAG,OACZ,kBAAC,IAAD,CACEC,IAAKD,EAAIE,WACTL,KAAMG,EAAIE,WACVC,MAAOH,EAAII,WACXC,IAAQb,EAAL,QAAqBc,oBAAUN,EAAIE,YAAnC,aA+BV,IAAMK,EAAS","file":"component---src-templates-tags-js-927368241f05a6b3cffe.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n// Utilities\r\nimport { kebabCase } from '../utils/helpers'\r\n\r\n// Components\r\nimport { Helmet } from 'react-helmet'\r\nimport { graphql } from 'gatsby'\r\n\r\nimport Layout from '../components/Layout'\r\nimport Tag from '../components/Tag'\r\nimport Bio from '../components/Bio'\r\nimport { useLang } from '../context/LanguageContext'\r\nimport { formatMessage } from '../utils/i18n'\r\n\r\nconst styles = {\r\n  tagListDiv: {\r\n    marginLeft: '1.5rem',\r\n    lineHeight: 3,\r\n  },\r\n}\r\n\r\nconst TagsPage = ({\r\n  data: {\r\n    allMarkdownRemark: { group },\r\n    site: {\r\n      siteMetadata: { title },\r\n    },\r\n  },\r\n  location,\r\n}) => {\r\n  const { homeLink } = useLang()\r\n  const tTags = formatMessage('tTags')\r\n\r\n  return (\r\n    <Layout location={location} title={title} breadcrumbs={[{ text: tTags }]}>\r\n      <aside>\r\n        <Bio />\r\n      </aside>\r\n      <Helmet title={tTags} />\r\n      <div>\r\n        <h1>{tTags}</h1>\r\n        <div style={styles.tagListDiv}>\r\n          {group.map(tag => (\r\n            <Tag\r\n              key={tag.fieldValue}\r\n              text={tag.fieldValue}\r\n              count={tag.totalCount}\r\n              url={`${homeLink}tags/${kebabCase(tag.fieldValue)}/`}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nTagsPage.propTypes = {\r\n  data: PropTypes.shape({\r\n    allMarkdownRemark: PropTypes.shape({\r\n      group: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          fieldValue: PropTypes.string.isRequired,\r\n          totalCount: PropTypes.number.isRequired,\r\n        }).isRequired\r\n      ),\r\n    }),\r\n    site: PropTypes.shape({\r\n      siteMetadata: PropTypes.shape({\r\n        title: PropTypes.string.isRequired,\r\n        lang: PropTypes.string.isRequired,\r\n      }),\r\n    }),\r\n  }).isRequired,\r\n  location: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default TagsPage\r\n\r\nexport const pageQuery = graphql`\r\n  query TagsTotalPage($langKey: String) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(\r\n      limit: 1000\r\n      filter: { fields: { langKey: { eq: $langKey } } }\r\n    ) {\r\n      group(field: frontmatter___tags) {\r\n        fieldValue\r\n        totalCount\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}