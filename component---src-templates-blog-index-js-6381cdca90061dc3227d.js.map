{"version":3,"sources":["webpack:///./src/components/PostAbbrev.js","webpack:///./src/components/Footer.js","webpack:///./src/templates/blog-index.js","webpack:///./src/components/TagList.js"],"names":["PostAbbrev","spoilerPart","tagsPart","slug","title","date","timeToRead","spoiler","tags","base","dangerouslySetInnerHTML","__html","baseUrl","style","fontFamily","fontSize","rhythm","marginBottom","boxShadow","to","rel","formatDate","formatReadingTime","defaultProps","Footer","render","marginTop","paddingTop","float","href","target","React","Component","BlogIndex","data","location","siteTitle","site","siteMetadata","posts","allMarkdownRemark","edges","useLang","lang","homeLink","Layout","SEO","Bio","map","node","get","fields","key","frontmatter","excerpt","pageQuery","TagList","restProps","className","text","url"],"mappings":"2FAAA,qFAWA,SAASA,EAAT,GAA6E,IACxEC,EAWAC,EAZiBC,EAAsD,EAAtDA,KAAMC,EAAgD,EAAhDA,MAAOC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,WAAYC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,KAAMC,EAAQ,EAARA,KAiBnE,OAfIF,IACHN,EACC,uBACCS,wBAAyB,CACxBC,OAAQJ,MAORC,IACHN,EAAW,kBAAC,IAAD,CAASM,KAAMA,EAAMI,QAAYH,EAAL,UAIvC,iCACC,gCACC,wBACCI,MAAO,CACNC,WAAY,yBACZC,SAAUC,YAAO,GACjBC,aAAcD,YAAO,OAGtB,kBAAC,OAAD,CAAMH,MAAO,CAAEK,UAAW,QAAUC,GAAIhB,EAAMiB,IAAI,YAChDhB,IAIH,+BAAWiB,YAAWhB,GAAtB,MAAiCiB,4BAChChB,IAEAJ,EACAD,IAgBLD,EAAWuB,aAAe,CACzBnB,MAAO,KACPG,QAAS,KACTC,KAAM,KACNC,KAAM,IAGQT,O,0GChBAwB,E,gLAjDbC,OAAA,WACE,OACE,4BACEZ,MAAO,CACLa,UAAWV,YAAO,KAClBW,WAAYX,YAAO,KAGrB,yBAAKH,MAAO,CAAEe,MAAO,UACnB,uBAAGC,KAAK,WAAWC,OAAO,SAASV,IAAI,uBAAvC,QAIF,uBACES,KAAK,oCACLC,OAAO,SACPV,IAAI,uBAHN,YAMK,IAjBP,IAkBS,IACP,uBACES,KAAK,iCACLC,OAAO,SACPV,IAAI,uBAHN,YAMK,IAzBP,IA0BS,IACP,uBACES,KAAK,gCACLC,OAAO,SACPV,IAAI,uBAHN,WAMK,IAjCP,IAkCS,IACP,uBACES,KAAK,+BACLC,OAAO,SACPV,IAAI,uBAHN,Y,GAtCaW,IAAMC,W,yDCH3B,0CA4CeC,UAlCf,YAAwC,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,SACpBC,EAAYF,EAAKG,KAAKC,aAAalC,MACnCmC,EAAQL,EAAKM,kBAAkBC,MAFC,EAGXC,cAAnBC,EAH8B,EAG9BA,KAAMC,EAHwB,EAGxBA,SAEd,OACC,kBAACC,EAAA,EAAD,CAAQV,SAAUA,EAAU/B,MAAOgC,GAClC,kBAACU,EAAA,EAAD,MACA,+BACC,kBAACC,EAAA,EAAD,OAED,8BACER,EAAMS,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACP7C,EAAQ8C,IAAID,EAAM,sBAAwBA,EAAKE,OAAOhD,KAC5D,OACC,kBAACH,EAAA,EAAD,CACC2C,KAAMA,EACNlC,KAAMmC,EACNQ,IAAKH,EAAKE,OAAOhD,KACjBA,KAAM8C,EAAKE,OAAOhD,KAClBE,KAAM4C,EAAKI,YAAYhD,KACvBC,WAAY2C,EAAK3C,WACjBF,MAAOA,EACPG,QAAS0C,EAAKI,YAAY9C,SAAW0C,EAAKK,QAC1C9C,KAAMyC,EAAKI,YAAY7C,WAK3B,kBAAC,EAAD,QAKYyB,IAEFsB,EAAS,a,mICzCtB,SAASC,EAAT,GAAmD,IAAhChD,EAA+B,EAA/BA,KAAMI,EAAyB,EAAzBA,QAAY6C,E,oIAAa,uBACjD,OACC,sCAAIC,UAAU,UAAaD,EAA3B,CAAsC5C,MAAO,CAAEI,aAAc,MAC3DT,EAAKwC,KAAI,SAAAW,GAAI,OACb,wBAAIP,IAAKO,GACR,kBAAC,IAAD,CAAKA,KAAMA,EAAMC,IAAQhD,EAAL,IAAgB+C,SAYzCH,EAAQjC,aAAe,CACtBX,QAAS,IAGK4C","file":"component---src-templates-blog-index-js-6381cdca90061dc3227d.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { Link } from 'gatsby'\r\n\r\nimport { rhythm } from '../utils/typography'\r\nimport { formatReadingTime } from '../utils/helpers'\r\nimport { formatDate } from '../utils/i18n'\r\n\r\nimport TagList from './TagList'\r\n\r\nfunction PostAbbrev({ slug, title, date, timeToRead, spoiler, tags, base }) {\r\n\tlet spoilerPart\r\n\tif (spoiler) {\r\n\t\tspoilerPart = (\r\n\t\t\t<p\r\n\t\t\t\tdangerouslySetInnerHTML={{\r\n\t\t\t\t\t__html: spoiler,\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t)\r\n\t}\r\n\r\n\tlet tagsPart\r\n\tif (tags) {\r\n\t\ttagsPart = <TagList tags={tags} baseUrl={`${base}tags`} />\r\n\t}\r\n\r\n\treturn (\r\n\t\t<article>\r\n\t\t\t<header>\r\n\t\t\t\t<h3\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tfontFamily: 'Montserrat, sans-serif',\r\n\t\t\t\t\t\tfontSize: rhythm(1),\r\n\t\t\t\t\t\tmarginBottom: rhythm(1 / 4),\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Link style={{ boxShadow: 'none' }} to={slug} rel='bookmark'>\r\n\t\t\t\t\t\t{title}\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</h3>\r\n\r\n\t\t\t\t<small>{`${formatDate(date)} â€¢ ${formatReadingTime(\r\n\t\t\t\t\ttimeToRead\r\n\t\t\t\t)}`}</small>\r\n\t\t\t\t{tagsPart}\r\n\t\t\t\t{spoilerPart}\r\n\t\t\t</header>\r\n\t\t</article>\r\n\t)\r\n}\r\n\r\nPostAbbrev.propTypes = {\r\n\tslug: PropTypes.string.isRequired,\r\n\ttitle: PropTypes.string,\r\n\tdate: PropTypes.string.isRequired,\r\n\ttimeToRead: PropTypes.number.isRequired,\r\n\tspoiler: PropTypes.string,\r\n\ttags: PropTypes.array,\r\n\tbase: PropTypes.string,\r\n}\r\n\r\nPostAbbrev.defaultProps = {\r\n\ttitle: null,\r\n\tspoiler: null,\r\n\ttags: null,\r\n\tbase: '',\r\n}\r\n\r\nexport default PostAbbrev\r\n","import React from 'react'\r\n\r\nimport { rhythm } from '../utils/typography'\r\n\r\nclass Footer extends React.Component {\r\n  render() {\r\n    return (\r\n      <footer\r\n        style={{\r\n          marginTop: rhythm(2.5),\r\n          paddingTop: rhythm(1),\r\n        }}\r\n      >\r\n        <div style={{ float: 'right' }}>\r\n          <a href=\"/rss.xml\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n            rss\r\n          </a>\r\n        </div>\r\n        <a\r\n          href=\"https://linkedin.com/in/nvdai2401\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          linkedin\r\n        </a>{' '}\r\n        &bull;{' '}\r\n        <a\r\n          href=\"https://facebook.com/nvdai2401\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          facebook\r\n        </a>{' '}\r\n        &bull;{' '}\r\n        <a\r\n          href=\"https://twitter.com/nvdai2401\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          twitter\r\n        </a>{' '}\r\n        &bull;{' '}\r\n        <a\r\n          href=\"https://github.com/nvdai2401\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          github\r\n        </a>\r\n      </footer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Footer\r\n","import { graphql } from 'gatsby'\r\nimport { useLang } from '../context/LanguageContext'\r\n\r\nimport Bio from '../components/Bio'\r\nimport Footer from '../components/Footer'\r\nimport Layout from '../components/Layout'\r\nimport PostAbbrev from '../components/PostAbbrev'\r\nimport React from 'react'\r\nimport SEO from '../components/SEO'\r\nimport get from 'lodash/get'\r\n\r\nfunction BlogIndex({ data, location }) {\r\n\tconst siteTitle = data.site.siteMetadata.title\r\n\tconst posts = data.allMarkdownRemark.edges\r\n\tconst { lang, homeLink } = useLang()\r\n\r\n\treturn (\r\n\t\t<Layout location={location} title={siteTitle}>\r\n\t\t\t<SEO />\r\n\t\t\t<aside>\r\n\t\t\t\t<Bio />\r\n\t\t\t</aside>\r\n\t\t\t<main>\r\n\t\t\t\t{posts.map(({ node }) => {\r\n\t\t\t\t\tconst title = get(node, 'frontmatter.title') || node.fields.slug\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<PostAbbrev\r\n\t\t\t\t\t\t\tlang={lang}\r\n\t\t\t\t\t\t\tbase={homeLink}\r\n\t\t\t\t\t\t\tkey={node.fields.slug}\r\n\t\t\t\t\t\t\tslug={node.fields.slug}\r\n\t\t\t\t\t\t\tdate={node.frontmatter.date}\r\n\t\t\t\t\t\t\ttimeToRead={node.timeToRead}\r\n\t\t\t\t\t\t\ttitle={title}\r\n\t\t\t\t\t\t\tspoiler={node.frontmatter.spoiler || node.excerpt}\r\n\t\t\t\t\t\t\ttags={node.frontmatter.tags}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)\r\n\t\t\t\t})}\r\n\t\t\t</main>\r\n\t\t\t<Footer />\r\n\t\t</Layout>\r\n\t)\r\n}\r\n\r\nexport default BlogIndex\r\n\r\nexport const pageQuery = graphql`\r\n\tquery($langKey: String!) {\r\n\t\tsite {\r\n\t\t\tsiteMetadata {\r\n\t\t\t\ttitle\r\n\t\t\t\tdescription\r\n\t\t\t}\r\n\t\t}\r\n\t\tallMarkdownRemark(\r\n\t\t\tfilter: { fields: { langKey: { eq: $langKey } } }\r\n\t\t\tsort: { fields: [frontmatter___date], order: DESC }\r\n\t\t) {\r\n\t\t\tedges {\r\n\t\t\t\tnode {\r\n\t\t\t\t\tfields {\r\n\t\t\t\t\t\tslug\r\n\t\t\t\t\t\tlangKey\r\n\t\t\t\t\t}\r\n\t\t\t\t\texcerpt\r\n\t\t\t\t\ttimeToRead\r\n\t\t\t\t\tfrontmatter {\r\n\t\t\t\t\t\tdate(formatString: \"MMMM DD, YYYY\")\r\n\t\t\t\t\t\ttitle\r\n\t\t\t\t\t\tspoiler\r\n\t\t\t\t\t\ttags\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport Tag from './Tag'\r\nimport './TagList.css'\r\n\r\nfunction TagList({ tags, baseUrl, ...restProps }) {\r\n\treturn (\r\n\t\t<ul className='tag-ul' {...restProps} style={{ marginBottom: 12 }}>\r\n\t\t\t{tags.map(text => (\r\n\t\t\t\t<li key={text}>\r\n\t\t\t\t\t<Tag text={text} url={`${baseUrl}/${text}`} />\r\n\t\t\t\t</li>\r\n\t\t\t))}\r\n\t\t</ul>\r\n\t)\r\n}\r\n\r\nTagList.propTypes = {\r\n\ttags: PropTypes.array.isRequired,\r\n\tbaseUrl: PropTypes.string,\r\n}\r\n\r\nTagList.defaultProps = {\r\n\tbaseUrl: '',\r\n}\r\n\r\nexport default TagList\r\n"],"sourceRoot":""}